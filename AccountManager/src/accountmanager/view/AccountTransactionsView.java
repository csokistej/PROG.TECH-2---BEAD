/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package accountmanager.view;

import accountmanager.controller.AccountManagerController;
import accountmanager.entity.Account;
import accountmanager.entity.Transaction;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author doobs
 */
public class AccountTransactionsView extends javax.swing.JFrame {

    private AccountManagerController controller;
    private String accountNumber;
    private final DefaultListModel listModel = new DefaultListModel();
    /**
     * Creates new form AccountTransactionsView
     */
    public AccountTransactionsView() {
        initComponents();
        jList1.setModel(listModel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        fillTotalTransactionList();
        setLocation(400, 350);
        setResizable(false);
    }
    
    public AccountTransactionsView(AccountManagerController controller) {
        setTitle("Account Manager");
        initComponents();
        this.controller = controller;
        jList1.setModel(listModel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        fillTotalTransactionList();
        setLocation(400, 350);
        setResizable(false);
    }
    
    
    
    public AccountTransactionsView(AccountManagerController controller, String accountNumber) {
        initComponents();
        this.controller = controller;
        this.accountNumber = accountNumber;
        jList1.setModel(listModel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        fillTransactionList();
        setLocation(400, 350);
        setResizable(false);
    }
    
    private void fillTransactionList(){
        controller.getTransactionsByAccountNumber(accountNumber).stream().forEach(transaction -> addTransactionToList(transaction));
    }
    
    private void fillTotalTransactionList(){
        controller.getAllTransactions().stream().forEach(transaction -> addTransactionToList(transaction));
    }
    
    private void addTransactionToList(Transaction transaction){
        listModel.addElement(transaction.toString());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Book transaction");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete transaciton");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 102));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Transactions of Account: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure?","Warning!", JOptionPane.OK_CANCEL_OPTION);
        if(JOptionPane.OK_OPTION == showConfirmDialog){
            this.dispose();
        } else if(JOptionPane.CANCEL_OPTION == showConfirmDialog) {
            System.out.println("action has been cancelled.");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure?","Warning!", JOptionPane.OK_CANCEL_OPTION);
        if(JOptionPane.OK_OPTION == showConfirmDialog){
            if(jList1.getSelectedValuesList().size() == 1){
                int selectedIndex = jList1.getSelectedIndex();
                Object val = jList1.getSelectedValue();
                String[] splitted = val.toString().split(":");
                int id = Integer.parseInt(splitted[1].substring(0, splitted[1].length() - 3).trim());
                String number = splitted[2].substring(0, splitted[2].length() - 3).trim();
                String amountStr = splitted[4].trim();
                int amount = 0;
                if(!amountStr.contains("[BOOKED]")){
                    amount = Integer.parseInt(amountStr);
                } 
                List<Account> accounts = new ArrayList<>();
                if(controller.getAccountByAccountNumber(number).size() == 1){
                    accounts = controller.getAccountByAccountNumber(number);
                }
                int newBalance = accounts.get(0).getBalance() + amount;
                controller.updateAccountBeforeDelete(newBalance, number);
                controller.deleteTransactionById(id);
                listModel.remove(jList1.getSelectedIndex());
            }
        } else if(JOptionPane.CANCEL_OPTION == showConfirmDialog) {
            System.out.println("action has been cancelled.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure?","Warning!", JOptionPane.OK_CANCEL_OPTION);
        if(JOptionPane.OK_OPTION == showConfirmDialog){
            if(jList1.getSelectedValuesList().size() == 1){
                int selectedIndex = jList1.getSelectedIndex();
                Object val = jList1.getSelectedValue();
                String[] splitted = val.toString().split(":");
                int id = Integer.parseInt(splitted[1].substring(0, splitted[1].length() - 3).trim());
                String number = splitted[3].substring(0, splitted[3].length() - 6).trim();
                String amountStr = splitted[4].trim();
                int amount = 0;
                if(!amountStr.contains("[BOOKED]")){
                    amount = Integer.parseInt(amountStr);
                }
                List<Account> accounts = new ArrayList<>();
                if(controller.getAccountByAccountNumber(number).size() == 1){
                    accounts = controller.getAccountByAccountNumber(number);
                }
                int newBalance = accounts.get(0).getBalance() + amount;
                controller.updateAccountBeforeBooking(newBalance, number);
                controller.bookTransactionById(id);
                String newVal = val.toString() + " [BOOKED]";
                listModel.set(jList1.getSelectedIndex(), newVal);
            }
        } else if(JOptionPane.CANCEL_OPTION == showConfirmDialog) {
            System.out.println("action has been cancelled.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountTransactionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountTransactionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountTransactionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountTransactionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountTransactionsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
